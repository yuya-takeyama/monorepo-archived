name: deploy

on:
  pull_request:
    branches-ignore:
      - release
      - master

  push:
    branches:
      - develop
      - release
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.config.outputs.config }}
      matrix: ${{ steps.load-build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: config
        uses: ./.github/actions/config
      - id: load-build-matrix
        uses: ./.github/actions/load-build-matrix

  push-argocd-app:
    name: 'push-argocd-app / ${{ fromJSON(matrix.build-params).overlay }}'
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        build-params: ${{ fromJSON(needs.setup.outputs.matrix).buildParams }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout }}
          ref: master
          path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - id: enable-auto-sync
        uses: ./.github/actions/enable-auto-sync
      - uses: ./.github/actions/generate-argocd-app
        with:
          overlay: ${{ fromJSON(matrix.build-params).overlay }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
          repo-url: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.http-url }}
          manifest-path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
          enable-auto-sync: ${{ steps.enable-auto-sync.outputs.result }}
      - id: pull-request-body
        uses: ./.github/actions/generate-pull-request-body
      - uses: ./.github/actions/push-to-manifest-repo
        with:
          github-token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          manifest-path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
          branch-prefix: applications
          commit-message: Update applications in ${{ fromJSON(matrix.build-params).namespace }}
          pull-request-title: Update applications in ${{ fromJSON(matrix.build-params).namespace }}
          pull-request-body: ${{ steps.pull-request-body.outputs.result }}

  build-and-push:
    name: 'build-and-push / ${{ matrix.service-name }} / ${{ fromJSON(matrix.build-params).overlay }}'
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        service-name: ${{ fromJSON(needs.setup.outputs.matrix).services }}
        build-params: ${{ fromJSON(needs.setup.outputs.matrix).buildParams }}
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - uses: actions/checkout@v2
      - id: docker-build-required
        uses: ./.github/actions/docker-build-required
        with:
          service-name: ${{ matrix.service-name }}
          overlay: ${{ fromJSON(matrix.build-params).overlay }}
      - uses: docker/setup-qemu-action@v1
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
      - uses: docker/setup-buildx-action@v1
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
      - uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: '4.0.5'
      - name: Cache Docker layers
        uses: actions/cache@v2
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service-name }}-${{ fromJSON(matrix.build-params).namespace }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service-name }}-${{ fromJSON(matrix.build-params).namespace }}-
            ${{ runner.os }}-buildx-${{ matrix.service-name }}-

      # Build and push Docker image
      - name: Login to Container Registry
        uses: docker/login-action@v1 
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
        with:
          registry: ${{ fromJSON(needs.setup.outputs.config).container-registry.registry }}
          username: ${{ fromJSON(needs.setup.outputs.config).container-registry.username }}
          password: ${{ secrets.GOOGLE_ARTIFACT_REGISTRY_JSON_KEY }}
      - id: image-tags
        uses: ./.github/actions/generate-image-tags
        with:
          image-name-prefix: ${{ fromJSON(needs.setup.outputs.config).container-registry.image-name-prefix }}
          service-name: ${{ matrix.service-name }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
        with:
          push: true
          context: ${{ matrix.service-name }}
          build-args: |
            OVERLAY=${{ fromJSON(matrix.build-params).overlay }}
            NAMESPACE=${{ fromJSON(matrix.build-params).namespace }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          tags: ${{ steps.image-tags.outputs.image-tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move Docker layer cache
        if: ${{ steps.docker-build-required.outputs.required == 'true' }}
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Build and push Kubernetes manifest
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout }}
          ref: master
          path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - uses: ./.github/actions/build-manifest
        with:
          service-name: ${{ matrix.service-name }}
          overlay: ${{ fromJSON(matrix.build-params).overlay }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
          image-tag: ${{ steps.image-tags.outputs.image-tags }}
          manifest-path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
      - id: pull-request-body
        uses: ./.github/actions/generate-pull-request-body
      - uses: ./.github/actions/push-to-manifest-repo
        with:
          github-token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          manifest-path: ${{ fromJSON(needs.setup.outputs.config).manifest-repository.checkout-path }}
          branch-prefix: ${{ matrix.service-name }}
          commit-message: Update ${{ matrix.service-name }} in ${{ fromJSON(matrix.build-params).namespace }}
          pull-request-title: Update ${{ matrix.service-name }} in ${{ fromJSON(matrix.build-params).namespace }}
          pull-request-body: ${{ steps.pull-request-body.outputs.result }}
