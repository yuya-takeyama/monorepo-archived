name: deploy

on:
  pull_request:
    branches-ignore:
      - release
      - master

  push:
    branches:
      - develop
      - release
      - master

jobs:
  load-build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.load-build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: load-build-matrix
        uses: ./.github/actions/load-build-matrix

  push-argocd-app:
    name: 'push-argocd-app / ${{ fromJSON(matrix.build-params).overlay }}'
    needs: load-build-matrix
    strategy:
      fail-fast: false
      matrix:
        build-params: ${{ fromJSON(needs.load-build-matrix.outputs.matrix).buildParams }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: yuya-takeyama/gitops-repo
          ref: master
          path: gitops-repo
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - uses: ./.github/actions/push-argocd-app
        with:
          github-token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          overlay: ${{ fromJSON(matrix.build-params).overlay }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
          git-user-email: ${{ secrets.DEPLOY_GIT_USER_EMAIL }}
          git-user-name: ${{ secrets.DEPLOY_GIT_USER_NAME }}

  build-and-push:
    name: 'build-and-push / ${{ matrix.service-name }} / ${{ fromJSON(matrix.build-params).overlay }}'
    needs: load-build-matrix
    strategy:
      fail-fast: false
      matrix:
        service-name: ${{ fromJSON(needs.load-build-matrix.outputs.matrix).services }}
        build-params: ${{ fromJSON(needs.load-build-matrix.outputs.matrix).buildParams }}
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: '4.0.5'
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build and push Docker image
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - id: image-tags
        uses: ./.github/actions/generate-image-tags
        with:
          service-name: ${{ matrix.service-name }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ${{ matrix.service-name }}
          tags: ${{ steps.image-tags.outputs.image-tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move Docker layer cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Build and push Kubernetes manifest
      - name: Prepare kustomize workspace
        run: |
          mkdir /tmp/kustomize
      - uses: actions/checkout@v2
        with:
          repository: yuya-takeyama/gitops-repo
          ref: master
          path: gitops-repo
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - uses: ./.github/actions/build-and-push-manifest
        with:
          github-token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          service-name: ${{ matrix.service-name }}
          overlay: ${{ fromJSON(matrix.build-params).overlay }}
          namespace: ${{ fromJSON(matrix.build-params).namespace }}
          image-tag: ${{ steps.image-tags.outputs.image-tags }}
          git-user-email: ${{ secrets.DEPLOY_GIT_USER_EMAIL }}
          git-user-name: ${{ secrets.DEPLOY_GIT_USER_NAME }}
